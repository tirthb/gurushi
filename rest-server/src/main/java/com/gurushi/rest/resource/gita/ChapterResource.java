package com.gurushi.rest.resource.gita;import java.util.List;import javax.ws.rs.GET;import javax.ws.rs.Path;import javax.ws.rs.PathParam;import javax.ws.rs.Produces;import javax.ws.rs.WebApplicationException;import javax.ws.rs.core.MediaType;import javax.ws.rs.core.Response;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Component;import com.gurushi.data.Chapter;import com.gurushi.data.ChapterMini;import com.gurushi.data.Scripture;import com.gurushi.service.ChapterService;import com.gurushi.service.ScriptureService;/** *  * @author Madhav * */@Component@Path("/gita/chapter")public class ChapterResource {	Logger logger = LoggerFactory.getLogger(ChapterResource.class);	@Autowired	private ChapterService cs;		@Autowired	private ScriptureService ss;		@GET	@Path("/all")	@Produces(MediaType.APPLICATION_JSON)	public List<ChapterMini> getAllChapters() {		try{			Scripture s = ss.findByName("Bhagavad Gita");						return cs.getAllChapterMinisForAScripture(s);		} catch (Exception e) {			String msg = String.format("Error in geting all chapters: %s", e.getMessage());			logger.error(msg, e);			throw new WebApplicationException(					Response.status(500).entity(msg).build()					);		}	}	@GET	@Path("/{chapter_id}")	@Produces(MediaType.APPLICATION_JSON)	public Chapter getChapterById(@PathParam("chapter_id") String chapterId) {		try{			Scripture s = ss.findByName("Bhagavad Gita");						return cs.findByNumberAndScripture(chapterId, s);		} catch (Exception e) {			String msg = String.format("Error in geting chapter: %s - %s", chapterId, e.getMessage());			logger.error(msg, e);			throw new WebApplicationException(					Response.status(500).entity(msg).build()					);		}	}	}